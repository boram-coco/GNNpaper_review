[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "GNNpaper_review",
    "section": "",
    "text": "Author\n\n\n\n\n\n\n \n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/Untitled.html",
    "href": "posts/Untitled.html",
    "title": "GNNpaper_review",
    "section": "",
    "text": "import networkx as nx\nimport matplotlib.pyplot as plt\n\n# 그래프 생성\nG = nx.Graph()\n\n# 노드 추가 (각 노드는 거래를 나타냄)\ntransactions = ['Transaction1', 'Transaction2', 'Transaction3']\nfor transaction in transactions:\n    G.add_node(transaction)\n\n# 간선 추가 (간선은 거래 간의 관계를 나타냄)\nedges = [('Transaction1', 'Transaction2'), ('Transaction2', 'Transaction3')]\nG.add_edges_from(edges)\n\n# 그래프 시각화\nnx.draw(G, with_labels=True, node_color='lightblue', node_size=2000, font_size=10, font_weight='bold', edge_color='gray')\nplt.show()\n\n\n\n\n\n\n\n\n\nimport networkx as nx\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Number of nodes and edges\nN = 5\nnum_edges = 6\n\n# Generate a random graph\nG = nx.gnm_random_graph(N, num_edges)\n\n# Generate adjacency matrix\nA = nx.adjacency_matrix(G).todense()\n\n# Generate random node features\nP = 3\nX = np.random.rand(N, P)\n\n# Plot the graph\nplt.figure(figsize=(6, 4))\nnx.draw(G, with_labels=True, node_color='lightblue', node_size=1000, font_size=12)\nplt.title('A simple graph with 5 nodes')\nplt.savefig('simple_graph.pdf', format='pdf')\n\nplt.show()\n\nprint(\"Adjacency Matrix (A):\")\nprint(A)\nprint(\"\\nNode Features Matrix (X):\")\nprint(X)\n\n\n\n\n\n\n\n\nAdjacency Matrix (A):\n[[0 0 0 0 1]\n [0 0 1 1 1]\n [0 1 0 0 1]\n [0 1 0 0 1]\n [1 1 1 1 0]]\n\nNode Features Matrix (X):\n[[0.02938369 0.09320366 0.20419009]\n [0.56683677 0.50854838 0.86367474]\n [0.48176577 0.95761099 0.5169781 ]\n [0.41430242 0.37279037 0.27685242]\n [0.70166249 0.93460595 0.35798684]]\n\n\n\nimport networkx as nx\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\n# Generate a random graph\nG1 = nx.gnm_random_graph(5, 6)\nG2 = nx.gnm_random_graph(5, 5)\n\n# Generate adjacency matrix\nA1 = nx.adjacency_matrix(G1).todense()\nA2 = nx.adjacency_matrix(G2).todense()\n\n# Generate random node features\nP = 3\nX1 = np.random.rand(N, P)\nX2 = np.random.rand(N, P)\n\n# Plot the graphs side by side\nplt.figure(figsize=(12, 6))\n\nplt.subplot(1, 2, 1)\nnx.draw(G1, with_labels=True, node_color='lightblue', node_size=1000, font_size=12)\nplt.title('Graph 1 with Node Features')\n\nplt.subplot(1, 2, 2)\nnx.draw(G2, with_labels=True, node_color='lightblue', node_size=1000, font_size=12)\nplt.title('Graph 2 with Node Features')\n\nplt.tight_layout()\nplt.show()\n\nprint(\"Adjacency Matrix (Graph 1):\")\nprint(A1)\nprint(\"\\nNode Features Matrix (Graph 1):\")\nprint(X1)\n\nprint(\"\\nAdjacency Matrix (Graph 2):\")\nprint(A2)\nprint(\"\\nNode Features Matrix (Graph 2):\")\nprint(X2)\n\n\n\n\n\n\n\n\nAdjacency Matrix (Graph 1):\n[[0 1 0 1 0]\n [1 0 0 1 1]\n [0 0 0 1 0]\n [1 1 1 0 1]\n [0 1 0 1 0]]\n\nNode Features Matrix (Graph 1):\n[[0.74015458 0.02162343 0.73619809]\n [0.89484241 0.32254342 0.15669301]\n [0.31338013 0.29529227 0.10237151]\n [0.69444025 0.86754446 0.79775422]\n [0.56415103 0.7398328  0.62886624]]\n\nAdjacency Matrix (Graph 2):\n[[0 0 1 1 0]\n [0 0 1 0 0]\n [1 1 0 1 1]\n [1 0 1 0 0]\n [0 0 1 0 0]]\n\nNode Features Matrix (Graph 2):\n[[0.13811958 0.68834208 0.62534054]\n [0.4792952  0.87881854 0.99900768]\n [0.83977122 0.32747838 0.59678254]\n [0.93719689 0.78175288 0.40658277]\n [0.17634074 0.57224325 0.27709739]]\n\n\n\nimport networkx as nx\nimport numpy as np\n\n# Generate a random graph\nG = nx.gnm_random_graph(5, 6)\n\n# Generate adjacency matrix\nA = nx.adjacency_matrix(G).todense()\n\n# Generate random node features\nP = 3\nX = np.random.rand(5, P)\n\n# Generate random weights\nW = np.random.rand(5, 5)\n\nprint(\"Graph with Node Features:\")\nprint(G.nodes(data=True))\nprint(\"\\nAdjacency Matrix:\")\nprint(A)\nprint(\"\\nNode Features Matrix:\")\nprint(X)\nprint(\"\\nWeight Matrix:\")\nprint(W)\n\nGraph with Node Features:\n[(0, {}), (1, {}), (2, {}), (3, {}), (4, {})]\n\nAdjacency Matrix:\n[[0 0 1 1 1]\n [0 0 1 0 1]\n [1 1 0 0 0]\n [1 0 0 0 1]\n [1 1 0 1 0]]\n\nNode Features Matrix:\n[[0.5508701  0.54906376 0.18716423]\n [0.68256345 0.14667187 0.94245213]\n [0.77615978 0.72283322 0.05117928]\n [0.197914   0.68404108 0.10576432]\n [0.55271394 0.28638119 0.26194547]]\n\nWeight Matrix:\n[[0.00440966 0.08934581 0.3574759  0.70842113 0.08389135]\n [0.48702896 0.81415092 0.62308546 0.50970174 0.8066936 ]\n [0.51559355 0.84100405 0.58063223 0.38152998 0.91249723]\n [0.62170328 0.41482863 0.54551301 0.26965625 0.04656379]\n [0.53020956 0.56078507 0.70209962 0.43569862 0.86452687]]"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  }
]